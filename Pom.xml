import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

        void main() {
        runApp(MyApp());
        }

        class MyApp extends StatelessWidget {
        @override
        Widget build(BuildContext context) {
        return MaterialApp(
        home: MyHomePage(),
        );
        }
        }

        class MyHomePage extends StatelessWidget {
        @override
        Widget build(BuildContext context) {
        return Scaffold(
        appBar: AppBar(
        title: Text('User Authentication'),
        ),
        body: Center(
        child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
    ElevatedButton(
    onPressed: () {
    Navigator.push(
    context,
    MaterialPageRoute(builder: (context) => RegisterPage()),
    );
    },
    child: Text('Register'),
    ),
    SizedBox(height: 20),
    ElevatedButton(
    onPressed: () {
    Navigator.push(
    context,
    MaterialPageRoute(builder: (context) => LoginPage()),
    );
    },
    child: Text('Login'),
    ),
    ],
    ),
    ),
    );
    }
    }

    class RegisterPage extends StatelessWidget {
    final TextEditingController usernameController = TextEditingController();
    final TextEditingController passwordController = TextEditingController();

    Future<void> registerUser() async {
        final response = await http.post(
        Uri.parse('http://localhost:8080/api/users/register'),
        headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
        },
        body: jsonEncode(<String, String>{
        'username': usernameController.text,
        'password': passwordController.text,
        }),
        );

        if (response.statusCode == 200) {
        print('User registered successfully!');
        } else {
        print('Failed to register user. Status code: ${response.statusCode}');
        }
        }

        @override
        Widget build(BuildContext context) {
        return Scaffold(
        appBar: AppBar(
        title: Text('Register'),
        ),
        body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
        children: [
        TextField(
        controller: usernameController,
        decoration: InputDecoration(labelText: 'Username'),
        ),
        TextField(
        controller: passwordController,
        obscureText: true,
        decoration: InputDecoration(labelText: 'Password'),
        ),
        SizedBox(height: 20),
        ElevatedButton(
        onPressed: registerUser,
        child: Text('Register'),
        ),
        ],
        ),
        ),
        );
        }
        }

        class LoginPage extends StatelessWidget {
        final TextEditingController usernameController = TextEditingController();
        final TextEditingController passwordController = TextEditingController();

        Future<void> loginUser() async {
            final response = await http.post(
            Uri.parse('http://localhost:8080/api/users/login'),
            headers: <String, String>{
            'Content-Type': 'application/json; charset=UTF-8',
            },
            body: jsonEncode(<String, String>{
            'username': usernameController.text,
            'password': passwordController.text,
            }),
            );

            if (response.statusCode == 200) {
            print('Login successful!');
            } else {
            print('Login failed. Status code: ${response.statusCode}');
            }
            }

            @override
            Widget build(BuildContext context) {
            return Scaffold(
            appBar: AppBar(
            title: Text('Login'),
            ),
            body: Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
            children: [
            TextField(
            controller: usernameController,
            decoration: InputDecoration(labelText: 'Username'),
            ),
            TextField(
            controller: passwordController,
            obscureText: true,
            decoration: InputDecoration(labelText: 'Password'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
            onPressed: loginUser,
            child: Text('Login'),
            ),
            ],
            ),
            ),
            );
            }
            }